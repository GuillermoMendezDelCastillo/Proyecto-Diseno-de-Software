/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import javax.swing.JLabel;
import javax.swing.border.LineBorder;
import com.toedter.calendar.JTextFieldDateEditor;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.Color;
import dto.ClienteDTO;
import dto.CuponDTO;
import dto.PagoDTO;
import subsistemaCostoPago.ICostoPago;
import subsistemaBanco.IValidarTarjetaDebito;
import subsistemaBanco.fachadaTarjetaDebito;
import subsistemaGenerarPago.IGenerarPago;
import javax.swing.JOptionPane;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import subsistemaCalcularDescuento.ICalcularDescuento;
import subsistemaCalcularDescuento.fachadaCalcularDescuento;
import subsistemaCostoPago.fachadaCostoPago;
import subsistemaGenerarPago.fachadaGenerarPago;

/**
 *
 * @author Gui26
 */
public class LimitePago extends javax.swing.JFrame {
    
    private ClienteDTO clienteDto;
    
    /**
     * Creates new form LimitePago
     */
    public LimitePago(ClienteDTO clienteDto) {
        this.clienteDto = clienteDto;
        initComponents();
        btnAplicar.setVisible(false);
        lblCupon.setVisible(false);
        txtNumeroCupon.setVisible(false);
        lblDescuento.setVisible(false);
        lblTotalConDescuento.setVisible(false);
        mostrar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbMetodo = new javax.swing.JComboBox<>();
        btnRealizaPago = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblCorreoNombre = new javax.swing.JLabel();
        txtCorreoNombre = new javax.swing.JTextField();
        lblCvv = new javax.swing.JLabel();
        txtCvv = new javax.swing.JTextField();
        jDateFecha = new com.toedter.calendar.JDateChooser();
        lblFecha = new javax.swing.JLabel();
        lblDescuento = new javax.swing.JLabel();
        lblCupon = new javax.swing.JLabel();
        lblTotalConDescuento = new javax.swing.JLabel();
        txtNumeroCupon = new javax.swing.JTextField();
        rbCupon = new javax.swing.JRadioButton();
        btnAplicar = new javax.swing.JToggleButton();
        labelErrorTarjeta = new javax.swing.JLabel();
        labelErrorNombre = new javax.swing.JLabel();
        labelErrorFechaCaducidad = new javax.swing.JLabel();
        labelErrorCVV = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pantalla de pago");

        jLabel1.setText("Datos sobre pago");

        jLabel2.setText("Metodo de pago:");

        jLabel3.setText("Total:");

        cbMetodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tarjeta Bancaria", "Transferencia Bancaria" }));
        cbMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMetodoActionPerformed(evt);
            }
        });

        btnRealizaPago.setText("Pagar");
        btnRealizaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizaPagoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Numero:");

        txtNumero.setPreferredSize(new java.awt.Dimension(82, 22));
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        lblCorreoNombre.setText("Nombre:");

        txtCorreoNombre.setName(""); // NOI18N
        txtCorreoNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoNombreKeyTyped(evt);
            }
        });

        lblCvv.setText("CVV:");

        txtCvv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCvvKeyTyped(evt);
            }
        });

        jDateFecha.setDateFormatString("yyyy-MM-dd");

        lblFecha.setText("Fecha de caducidad:");

        lblDescuento.setText("Total con descuento aplicado:");

        lblCupon.setText("Numero de cupon:");

        lblTotalConDescuento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalConDescuento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rbCupon.setText("Cupon");
        rbCupon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCuponActionPerformed(evt);
            }
        });

        btnAplicar.setText("AplicarCupon");
        btnAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCvv)
                                    .addComponent(jLabel1)
                                    .addComponent(lblCupon))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addComponent(lblCorreoNombre)
                                    .addComponent(lblFecha))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbCupon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAplicar)
                                .addGap(58, 58, 58))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(164, 164, 164)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCvv)
                                    .addComponent(txtCorreoNombre)
                                    .addComponent(cbMetodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNumeroCupon)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblDescuento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTotalConDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnCancelar)
                                .addGap(165, 165, 165)
                                .addComponent(btnRealizaPago))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelErrorFechaCaducidad)
                                .addGap(61, 61, 61))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelErrorCVV)
                                .addGap(69, 69, 69)))
                        .addContainerGap(33, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelErrorTarjeta, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelErrorNombre, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(95, 95, 95))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(labelErrorTarjeta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelErrorNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCorreoNombre)
                    .addComponent(txtCorreoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelErrorFechaCaducidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFecha)
                    .addComponent(jDateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(labelErrorCVV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCvv)
                    .addComponent(txtCvv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbCupon)
                    .addComponent(btnAplicar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCupon)
                    .addComponent(txtNumeroCupon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotalConDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addGap(3, 3, 3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(btnRealizaPago)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    private void cbMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMetodoActionPerformed
        if (cbMetodo.getSelectedItem().toString().equals("Tarjeta Bancaria")){
            lblCorreoNombre.setText("Nombre:");
            lblFecha.setVisible(true);
            jDateFecha.setVisible(true);
            lblCvv.setVisible(true);
            txtCvv.setVisible(true);
        }
        if (cbMetodo.getSelectedItem().toString().equals("Transferencia Bancaria")){
            lblCorreoNombre.setText("Correo:");
            lblFecha.setVisible(false);
            jDateFecha.setVisible(false);
            lblCvv.setVisible(false);
            txtCvv.setVisible(false);
        }
    }//GEN-LAST:event_cbMetodoActionPerformed

    private void restablecerBorders(){
    
// Guardar el borde original
        Border originalBorder = txtNumero.getBorder();
        Border originalBorderTitular = txtCorreoNombre.getBorder();
        Border originalBorderFecha = jDateFecha.getBorder();
         Border originalBorderCvv = txtCvv.getBorder();
        // Agregar el DocumentListener a txtNumero
        txtNumero.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                clearError();
            }

            public void removeUpdate(DocumentEvent e) {
                clearError();
            }

            public void insertUpdate(DocumentEvent e) {
                clearError();
            }

            // Método para limpiar el mensaje de error y el borde rojo
            public void clearError() {
                txtNumero.setBorder(originalBorder);
                labelErrorTarjeta.setText("");
            }        
        });
        
             // Agregar el DocumentListener a txtNumero
        txtCorreoNombre.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                clearError();
            }

            public void removeUpdate(DocumentEvent e) {
                clearError();
            }

            public void insertUpdate(DocumentEvent e) {
                clearError();
            }

            // Método para limpiar el mensaje de error y el borde rojo
            public void clearError() {
                txtCorreoNombre.setBorder(originalBorderTitular);
                labelErrorNombre.setText("");
            }        
        });
        // Obtener el editor de texto del JDateChooser
        JTextFieldDateEditor editor = (JTextFieldDateEditor) jDateFecha.getDateEditor();
               // Agregar el DocumentListener a txtNumero
        editor.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                clearError();
            }

            public void removeUpdate(DocumentEvent e) {
                clearError();
            }

            public void insertUpdate(DocumentEvent e) {
                clearError();
            }

            // Método para limpiar el mensaje de error y el borde rojo
            public void clearError() {
                jDateFecha.setBorder(originalBorderFecha);
                labelErrorFechaCaducidad.setText("");
            }        
        });
        
         
             // Agregar el DocumentListener a txtNumero
        txtCvv.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                clearError();
            }

            public void removeUpdate(DocumentEvent e) {
                clearError();
            }

            public void insertUpdate(DocumentEvent e) {
                clearError();
            }

            // Método para limpiar el mensaje de error y el borde rojo
            public void clearError() {
                txtCvv.setBorder(originalBorderCvv);
                labelErrorCVV.setText("");
            }        
        });
        
        
    }
    
    private void btnRealizaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizaPagoActionPerformed

        restablecerBorders();
        IGenerarPago pago = new fachadaGenerarPago();
        if (validar()) {
            List<String> validacionTarjeta = validarTarjetaDebito();

            if (validacionTarjeta.contains("Valido")) {

                if (rbCupon.isSelected()) {
                    if (validar3()) {
                        PagoDTO pagoDTO = null;
                        if (cbMetodo.getSelectedItem().toString().equals("Tarjeta Bancaria")) {
                            pagoDTO = new PagoDTO(txtNumero.getText(), cbMetodo.getSelectedItem().toString(),
                                    Float.parseFloat(lblTotal.getText()), txtCorreoNombre.getText(),
                                    LocalDateTime.ofInstant(jDateFecha.getCalendar().toInstant(), jDateFecha.getCalendar().getTimeZone().toZoneId()).toLocalDate(),
                                    txtCvv.getText(), txtNumeroCupon.getText(),
                                    Float.parseFloat(lblTotalConDescuento.getText()));
                        }
                        if (cbMetodo.getSelectedItem().toString().equals("Transferencia Bancaria")) {
                            pagoDTO = new PagoDTO(txtNumero.getText(), cbMetodo.getSelectedItem().toString(),
                                    Float.parseFloat(lblTotal.getText()), txtCorreoNombre.getText(),
                                    txtNumeroCupon.getText(), Float.parseFloat(lblTotalConDescuento.getText()));
                        }

                        if (pago.generarPagoCupon(clienteDto, pagoDTO)) {
                            JOptionPane.showMessageDialog(this, "Pago realizado");

                            LimiteTienda limite = new LimiteTienda(clienteDto);
                            limite.setVisible(true);
                            dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "Datos invalidos", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Los datos del cupon son invalidos", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    PagoDTO pagoDTO = null;
                    if (cbMetodo.getSelectedItem().toString().equals("Tarjeta Bancaria")) {
                        pagoDTO = new PagoDTO(txtNumero.getText(), cbMetodo.getSelectedItem().toString(),
                                Float.parseFloat(lblTotal.getText()), txtCorreoNombre.getText(),
                                LocalDateTime.ofInstant(jDateFecha.getCalendar().toInstant(), jDateFecha.getCalendar().getTimeZone().toZoneId()).toLocalDate(),
                                txtCvv.getText());
                    }
                    if (cbMetodo.getSelectedItem().toString().equals("Transferencia Bancaria")) {
                        pagoDTO = new PagoDTO(txtNumero.getText(), cbMetodo.getSelectedItem().toString(),
                                Float.parseFloat(lblTotal.getText()), txtCorreoNombre.getText());
                    }

                    if (pago.generarPago(clienteDto, pagoDTO)) {
                        JOptionPane.showMessageDialog(this, "Pago realizado");

                        LimiteTienda limite = new LimiteTienda(clienteDto);
                        limite.setVisible(true);
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Datos invalidos", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }

            } else {
                if (validacionTarjeta.contains("Error_Numero")) {
                    // Cambiar el borde del JTextField a rojo
                    txtNumero.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
                    // Mostrar el mensaje de error en labelErrorTarjeta
                    labelErrorTarjeta.setText("La tarjeta no existe");
                    labelErrorTarjeta.setForeground(Color.RED);

                } else {
                    // Iterar sobre la lista
                    for (String valor : validacionTarjeta) {
                        // Usar un switch para cada String en la lista
                        switch (valor) {
                            case "Error_Titular":
                                // Cambiar el borde del JTextField a rojo
                                txtCorreoNombre.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
                                // Mostrar el mensaje de error en labelErrorTarjeta
                                labelErrorNombre.setText("Nombre del Titular incorrecto");
                                labelErrorNombre.setForeground(Color.RED);
                                break;
                            case "Error_Fecha":
                                // Cambiar el borde del JTextField a rojo
                                jDateFecha.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
                                // Mostrar el mensaje de error en labelErrorTarjeta
                                labelErrorFechaCaducidad.setText("Caducidad incorrecta");
                                labelErrorFechaCaducidad.setForeground(Color.RED);
                                break;
                            case "Error_Codigo":
                                // Cambiar el borde del JTextField a rojo
                                txtCvv.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
                                // Mostrar el mensaje de error en labelErrorTarjeta
                                labelErrorCVV.setText("CVV incorrecto");
                                labelErrorCVV.setForeground(Color.RED);
                                break;
                            default:
                                System.out.println("Valor desconocido: " + valor);
                                break;
                        }
                    }

                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Campo vacio", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnRealizaPagoActionPerformed

    
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        LimiteCarrito limite = new LimiteCarrito(clienteDto);
        limite.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void rbCuponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCuponActionPerformed
        cupon();
    }//GEN-LAST:event_rbCuponActionPerformed

    private void btnAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarActionPerformed
        if(btnAplicar.isSelected()){
            txtNumeroCupon.setEditable(false);
            calcularDescuento();
        } else {
            txtNumeroCupon.setEditable(true);
            lblTotalConDescuento.setText(null);
        }
    }//GEN-LAST:event_btnAplicarActionPerformed

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
         char c = evt.getKeyChar();
    if (!Character.isDigit(c)) {
        evt.consume(); 
          }
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtCvvKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCvvKeyTyped
              char c = evt.getKeyChar();
    if (!Character.isDigit(c)) {
        evt.consume(); 
          }
    }//GEN-LAST:event_txtCvvKeyTyped

    private void txtCorreoNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoNombreKeyTyped
          char c = evt.getKeyChar();
    if (!Character.isLetter(c)) {
        evt.consume();  // Ignora cualquier carácter que sea una letra
    }
    }//GEN-LAST:event_txtCorreoNombreKeyTyped

    public void calcularDescuento(){
        if (validar2()){
            ICalcularDescuento sesion = new fachadaCalcularDescuento();
            Float totalConDescuento = sesion.calcularDescuento(txtNumeroCupon.getText(), Float.parseFloat(lblTotal.getText()));
            if (totalConDescuento!=null){
                lblTotalConDescuento.setText(String.valueOf(totalConDescuento));
            } else{
                btnAplicar.setSelected(false);
                JOptionPane.showMessageDialog(this, "No se pudo encontrar el cupon");
            }
        } else{
            JOptionPane.showMessageDialog(this, "El campo del codigo del cupon esta vacio", "Error", JOptionPane.ERROR_MESSAGE);
            btnAplicar.setSelected(false);
        }
    }
    
    public void mostrar(){
        ICostoPago costo= new fachadaCostoPago();
        lblTotal.setText(String.format("%.02f", costo.costoPago(clienteDto)));
    }
    
    public List<String> validarTarjetaDebito(){
        String numeroTarjeta = txtNumero.getText();
        String titular =  txtCorreoNombre.getText();
        Date fechaCaducidad = jDateFecha.getDate();
        String cvv =   txtCvv.getText();
        fachadaTarjetaDebito FTD = new fachadaTarjetaDebito();      
        return FTD.validarTarjeta(numeroTarjeta,titular,fechaCaducidad,cvv);      
    }
    
    public boolean validar(){
        if (cbMetodo.getSelectedItem().toString().equals("Tarjeta Bancaria")){
            return !(txtNumero.getText().isBlank()||txtNumero.getText().isEmpty()
                ||txtCorreoNombre.getText().isBlank()||txtCorreoNombre.getText().isEmpty()
                ||!(jDateFecha.getCalendar()!=null)
                ||txtCvv.getText().isBlank()||txtCvv.getText().isEmpty());
        }
        if (cbMetodo.getSelectedItem().toString().equals("Transferencia Bancaria")){
            return !(txtNumero.getText().isBlank()||txtNumero.getText().isEmpty()
                ||txtCorreoNombre.getText().isBlank()||txtCorreoNombre.getText().isEmpty());
        }
        return false;
    }
    
    public boolean validar2(){
        return !(txtNumeroCupon.getText().isBlank()||txtNumeroCupon.getText().isEmpty());
    }
    public boolean validar3(){
        if (lblTotalConDescuento.getText()!=null){
            if (lblTotalConDescuento.getText().isBlank()||lblTotalConDescuento.getText().isEmpty()){
                return false;
            }
        } else {
            return false;
        }
        return validar2();
    }
    
    public void cupon(){
        if (rbCupon.isSelected()){
            btnAplicar.setVisible(true);
            lblCupon.setVisible(true);
            txtNumeroCupon.setEditable(true);
            txtNumeroCupon.setVisible(true);
            lblDescuento.setVisible(true);
            lblTotalConDescuento.setVisible(true);
        } else {
            btnAplicar.setVisible(false);
            btnAplicar.setSelected(false);
            lblCupon.setVisible(false);
            txtNumeroCupon.setVisible(false);
            txtNumeroCupon.setText(null);
            txtNumeroCupon.setEditable(true);
            lblDescuento.setVisible(false);
            lblTotalConDescuento.setVisible(false);
            lblTotalConDescuento.setText(null);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAplicar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRealizaPago;
    private javax.swing.JComboBox<String> cbMetodo;
    private com.toedter.calendar.JDateChooser jDateFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel labelErrorCVV;
    private javax.swing.JLabel labelErrorFechaCaducidad;
    private javax.swing.JLabel labelErrorNombre;
    private javax.swing.JLabel labelErrorTarjeta;
    private javax.swing.JLabel lblCorreoNombre;
    private javax.swing.JLabel lblCupon;
    private javax.swing.JLabel lblCvv;
    private javax.swing.JLabel lblDescuento;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalConDescuento;
    private javax.swing.JRadioButton rbCupon;
    private javax.swing.JTextField txtCorreoNombre;
    private javax.swing.JTextField txtCvv;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtNumeroCupon;
    // End of variables declaration//GEN-END:variables
}
