/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import Interfaz.IAdmin;
import dto.ClienteDTO;
import implementaciones.Administrador;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import subsistemaRegistroCliente.IRegistroCliente;
import javax.swing.JOptionPane;
import subsistemaRegistroCliente.fachadaRegistroCliente;

/**
 *
 * @author Gui26
 */
public class LimiteRegistro extends javax.swing.JFrame {

    /**
     * Creates new form LimiteRegistro
     */
    public LimiteRegistro() {
        initComponents();
    }
    
     private void registrarUsuario() {

        IAdmin admin = new Administrador();

        // Obtener los datos del formulario
        String nombre = txtNombre.getText();
        String contrasena = txtContrasena.getText();
        String correo = txtCorreo.getText();
        String fechaNacimiento = dateNacimiento.getDate().toString();

        // Convertir la fecha de nacimiento de String a Date
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date fechaNacimientoDate = dateFormat.parse(fechaNacimiento);

            // Crear un objeto UsuarioDTO con los datos del formulario
            ClienteDTO clientedto = new ClienteDTO();
            clientedto.setNombre(nombre);
            clientedto.setContrasena(contrasena);
            clientedto.setCorreo(correo);
            clientedto.setNacimiento(fechaNacimientoDate);

            // Llamar al método de registro en el admin
            ;

            // Mostrar mensaje de éxito
            JOptionPane.showMessageDialog(this, "Usuario registrado correctamente");

            // Limpiar los campos del formulario
            txtNombre.setText("");
            txtContrasena.setText("");
            txtCorreo.setText("");
            dateNacimiento.setDate(null);
        } catch (ParseException e) {
            e.printStackTrace();  // Manejo de error en caso de que la cadena no sea un formato válido
        }
    }

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Agrupador = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnRegistrarse = new javax.swing.JButton();
        txtCorreo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dateNacimiento = new com.github.lgooddatepicker.components.DatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro");

        Agrupador.setBackground(new java.awt.Color(255, 255, 255));
        Agrupador.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCancelar.setBackground(new java.awt.Color(0, 102, 153));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        Agrupador.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, 100, 40));

        btnRegistrarse.setText("Registrarse");
        btnRegistrarse.setBackground(new java.awt.Color(0, 102, 153));
        btnRegistrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarseActionPerformed(evt);
            }
        });
        Agrupador.add(btnRegistrarse, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 100, 40));

        txtCorreo.setBackground(new java.awt.Color(242, 242, 242));
        txtCorreo.setForeground(new java.awt.Color(0, 0, 0));
        Agrupador.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 120, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Correo:");
        Agrupador.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Fecha de nacimiento:");
        Agrupador.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));

        txtContrasena.setBackground(new java.awt.Color(242, 242, 242));
        txtContrasena.setForeground(new java.awt.Color(0, 0, 0));
        Agrupador.add(txtContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 120, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Contraseña:");
        Agrupador.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Nombre:");
        Agrupador.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, -1, -1));

        txtNombre.setBackground(new java.awt.Color(242, 242, 242));
        txtNombre.setForeground(new java.awt.Color(0, 0, 0));
        Agrupador.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 120, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/registro-icom.png"))); // NOI18N
        Agrupador.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 180, 190));
        Agrupador.add(dateNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Agrupador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Agrupador, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        LimiteIniciarSesion limite = new LimiteIniciarSesion();
        limite.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnRegistrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarseActionPerformed
       // Obtener los datos del formulario
        String nombre = txtNombre.getText();
        String contrasena = txtContrasena.getText();
        String correo = txtCorreo.getText();
        String fechaNacimiento = dateNacimiento.getDate().toString();

        // Validar que los campos no estén vacíos
        if (nombre.isEmpty() || contrasena.isEmpty() || correo.isEmpty() || fechaNacimiento.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Detener la ejecución del método si hay campos vacíos
        }

        try {
            registrarUsuario();

            // Mostrar mensaje de éxito
            JOptionPane.showMessageDialog(this, "Usuario registrado correctamente");

            // Limpiar los campos del formulario
            txtNombre.setText("");
            txtContrasena.setText("");
            txtCorreo.setText("");
            dateNacimiento.setDate(null);

            // Abrir la ventana de inicio de sesión
            LimiteIniciarSesion inicio = new LimiteIniciarSesion();
            inicio.setVisible(true);
            dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un problema al registrar el usuario.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Mostrar información sobre el error en la consola
        }
      
    }//GEN-LAST:event_btnRegistrarseActionPerformed
    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Agrupador;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRegistrarse;
    private com.github.lgooddatepicker.components.DatePicker dateNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtContrasena;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
